name: "Build, Test And Deploy Using Docker Compose"

on:
  workflow_dispatch:
    inputs:
      release_type:
        type: choice
        description: Release Type
        default: "norelease"
        options:
          - norelease
          - patch
          - minor
          - major
      skip_backend:
        type: choice
        description: Skip Backend?
        default: "no"
        options:
          - "yes"
          - "no"

jobs:
  build-image-and-deploy:
    permissions: write-all
    name: Build Docker Image
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release Tag
        uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: ${{ inputs.release_type }}
          use_github_release_notes: true
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
        with:
          semver_only: true
      - if: ${{ inputs.skip_backend == 'no' || inputs.release_type != 'norelease' }}
        name: Build Cart Image
        uses: tguankheng016/shared-actions/.github/actions/build-docker-image@main
        with:
          image-name: ghcr.io/${{ github.repository_owner }}/openiddict-oauth
          dockerfile: ./src/OpenIddictOAuth.Web/Dockerfile
          latest-tag: ${{ steps.get-latest-tag.outputs.tag }}
      - name: Deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST  }}
          username: ${{ secrets.SSH_USERNAME  }}
          key: ${{ secrets.SSH_PRIVATE_KEY  }}
          passphrase: ${{ secrets.SSH_PASSPHRASE  }}
          script: |
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            cd deployments/openiddict-oauth/docker
            export IMAGE_TAG=${{ steps.get-latest-tag.outputs.tag }}
            export CONN_STRING=${{ secrets.CONN_STRING }}
            docker compose -f ./prod.yml pull
            docker compose -f ./prod.yml down
            docker compose -f ./prod.yml up -d
            docker image prune -f
            docker container prune -f
            docker network prune -f
